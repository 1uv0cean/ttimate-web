stages:
  - build
  - deploy

build-next-app:
  image: node:20
  stage: build
  script:
    - corepack enable
    - corepack prepare pnpm@latest --activate
    - pnpm install --frozen-lockfile
    - export ESLINT_NO_DEV_ERRORS=1

    # 환경 변수 주입 (빌드 시점용)
    - export NEXT_PUBLIC_KAKAO_KEY=$NEXT_PUBLIC_KAKAO_KEY
    - export NEXT_PUBLIC_GOOGLE_ADSENSE_ID=$NEXT_PUBLIC_GOOGLE_ADSENSE_ID
    - export NEXT_PUBLIC_GA_MEASUREMENT_ID=$NEXT_PUBLIC_GA_MEASUREMENT_ID
    - export NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL

    - pnpm build
    - tar -czf ttimate.tar.gz .next public package.json pnpm-lock.yaml next.config.js
  artifacts:
    paths:
      - ttimate.tar.gz
    expire_in: 1 hour
  only:
    - master

deploy-to-ec2:
  image: alpine
  stage: deploy
  needs:
    - job: build-next-app
      artifacts: true
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ttimate.tar.gz ubuntu@$EC2_HOST:~/app/ttimate/
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_HOST <<'EOF'
        mkdir -p ~/app/ttimate
        cd ~/app/ttimate
        tar -xzf ttimate.tar.gz
        rm ttimate.tar.gz

        corepack enable
        corepack prepare pnpm@latest --activate
        export PNPM_HOME="$HOME/.local/share/pnpm"
        export PATH="$PNPM_HOME:$PATH"

        pnpm install --frozen-lockfile

        pm2 delete ttimate || true
        pm2 start "$PNPM_HOME/pnpm" --name ttimate -- start -- --port 3001
        pm2 save
      EOF
  only:
    - master
